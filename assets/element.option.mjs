!function(){"use strict";class t extends HTMLElement{static oberverAttributes=["aria-busy","aria-checked","aria-disabled","aria-hidden","aria-invalid","aria-label","aria-labelledby","aria-posinset","aria-selected","aria-setsize","data-value","value"];static role="option";static tagName="e-option";static initAttributes(t){const e={"aria-selected":t.ariaSelected??"false",id:t.id,role:this.role};return t.isConnected&&!1===Boolean(e.id)&&(e.id=[this.role,Math.round(performance.now())].join("-")),i=t,(s=a=e,n=typeof s,!s||"object"!=n&&"function"!=n?[[a,r]]:Object.entries(a)).forEach((t=>{let[e,a]=t;const r=String(e);if(null===a)i.removeAttribute(r);else if(a instanceof Attr)i.setAttributeNode(a);else{const t=i.getAttributeNode(r),e=String(a);null!==t?t.value=e:i.setAttribute(r,e)}})),new Map(i.getAttributeNames().sort().map((t=>[t,i.getAttributeNode(t)])));var i,a,r,s,n}constructor(){super(),t.initAttributes(this)}connectedCallback(){t.initAttributes(this)}get label(){return this.ariaLabel||this.textContent}get value(){return this.dataset.value||this.getAttribute("value")}}customElements.define(t.tagName,t),customElements.get(t.tagName)}();